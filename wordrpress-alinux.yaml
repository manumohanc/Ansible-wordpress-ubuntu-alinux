---    
    - name: "Apache - Installing httpd package"
      yum: 
        name: httpd
        state: installed
      tags:
        - lamp
        - apache

    - name: "Apache - Enabling PHP support"
      shell: amazon-linux-extras install php7.4 -y 
      tags: 
        - lamp
        - apache

    - name: "Apache - Creating httpd.conf from httpd.conf.j2 template"
      template: 
        src: httpd.conf.j2
        dest: /etc/httpd/conf/httpd.conf
      register: conf_status
      tags:
        - lamp
        - apache

    - name: "Apache - Create virtualhost entry from vhost.conf.j2 template"
      template:
        src: vhost.conf.j2
        dest: "/etc/httpd/conf.d/{{httpd_domain}}.conf"
        owner: "{{httpd_owner}}"
        group: "{{httpd_group}}"
      register: vhost_status
      tags:
        - lamp
        - apache

    - name: "Apache - Creating Document root"
      file: 
        path: "/var/www/html/{{httpd_domain}}"
        state: directory
        owner: "{{httpd_owner}}"
        group: "{{httpd_group}}"
      tags:
        - lamp
        - apache

    - name: "Apache - Creating Sample pages"
      copy: 
        src: "{{item}}" 
        dest: "/var/www/html/{{httpd_domain}}/"
        owner: "{{httpd_owner}}"
        group: "{{httpd_group}}"
      with_items: 
        - test.php
        - test.html
      tags:
        - lamp
        - apache

    - name: "Mariadb-Server - Installing MariaDB server"
      yum:
        name:
          - "mariadb-server"
          - "MySQL-python"
        state: latest
      register: install_status
      tags:
        - lamp
        - mariadb

    - name: "Mariadb-Server - Starting the services and enabling it"
      service:
        name: "mariadb"
        state: restarted
        enabled: true
      tags:
        - lamp
        - mariadb

    - name: "Mariadb-Server - Checking if root password is set"
      when: install_status.changed == true
      command:  mysql -u root -e "show databases"
      register: root_pass
      tags:
        - lamp
        - mariadb        

    - name: "Mariadb-Server - Setting the root password"
      when: install_status.changed == true and root_pass.rc == 0
      mysql_user:
        login_user: "root"
        login_password: ""
        name: "root"
        password: "{{mariadb_root_password}}"
        host_all: true
      tags:
        - lamp
        - mariadb

    - name: "Mariadb-Server - Removing Anonymous users"
      mysql_user:
        login_user: "root"
        login_password: "{{mariadb_root_password}}"
        name: ""
        password: ""
        host_all: true
        state: absent
      tags:
        - lamp
        - mariadb

    - name: "Mariadb-Server - Creating Wordpress database"
      mysql_db:
        login_user: "root"
        login_password: "{{mariadb_root_password}}"
        name: "{{mariadb_new_database}}"
        state: present
      tags:
        - lamp
        - mariadb

    - name: "Mariadb-Server - Creating Wordpress User {{mariadb_new_user}}"
      mysql_user:
        login_user: "root"
        login_password: "{{mariadb_root_password}}"
        name: "{{mariadb_new_user}}"
        password: "{{mariadb_newuser_password}}"
        state: present
        host: "%"
        priv: "{{mariadb_new_database}}.*:ALL"
      tags:
        - lamp
        - mariadb

    - name: "Wordpress - Downloading Wordpress"
      get_url:
        url: "{{wp_url}}"
        dest: /tmp/wordpress.tar.gz
      tags:
        - wordpress

    - name: "Wordpress - Extracting Wordpress"
      unarchive:
        src: /tmp/wordpress.tar.gz
        dest: /tmp/
        remote_src: true
      tags:
        - wordpress

    - name: "Wordpress - Copying Wordpress files to Documnet root"
      copy:
        src: /tmp/wordpress/
        dest: "/var/www/html/{{httpd_domain}}"
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
        remote_src: true
      tags:
        - wordpress

    - name: "Wordpress - Creating wp-config.php"
      template:
        src: wp-config.php.j2
        dest: "/var/www/html/{{httpd_domain}}/wp-config.php"
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
      tags:
        - wordpress

    - name: "Wordpress - Post-installation restart"
      service:
        name: "{{item}}"
        state: restarted
      with_items:
        - "mariadb"
        - "httpd"
        - "php-fpm"
      tags:
        - wordpress

    - name: "Wordpress - Post-Installation Cleanup"
      file:
        path: "{{item}}"
        state: absent
      with_items:
        - "/tmp/wordpress.tar.gz"
        - "/tmp/wordpress/"    
      tags:
        - wordpress 
